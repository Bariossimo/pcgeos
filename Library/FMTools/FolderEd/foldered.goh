/***********************************************************************
Includes
***********************************************************************/
@include <stdapp.goh>
@include <fmtool.goh>
#include <Ansi/string.h>
#include <Ansi/stdio.h>


/***********************************************************************
	Classes
***********************************************************************/
@class  FolderEdInteractionClass, GenInteractionClass;

	@message void MSG_FED_QUIT_DIALOG(int cmd);
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_FED_QUERY_FILE;
	@message (GEN_ITEM_GROUP_APPLY_MSG)   MSG_FED_APPLY_FILE;
	@message (GEN_ITEM_GROUP_APPLY_MSG)   MSG_FED_APPLY_CHANGE_DESTINATION;
	
	/*
	 *	Handling token list
	 */
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_FED_QUERY_TOKEN_LIST;
	@message (GEN_ITEM_GROUP_APPLY_MSG)   MSG_FED_APPLY_TOKEN_LIST;
	@message void MSG_FED_APPLY_TOKEN_RANGE();
	
@endc

/*---------------------------------------------------------------------------
 Klassendefinition WordValueClass  : Dialog zum éndern des Icons
	Ein Value-Feld ,da· positive Integer bis zur Wordgrenze versteht
	initial release.
	Methoden arbeiten mit festen Werten mfÅr minimum und Maximum.
  Achtung! Um die Werte zu setzen und zu lesen MSG_xx_GET / SET_VALUE nutzen
	MSD_xx_GET / SET_INTEGER_VALUE geht in dieser Implemenetation nicht
 ---------------------------------------------------------------------------*/
@class	WordValueClass, GenValueClass;
	@default	GVLI_maximum = (dword) 0xFFFF;
	@default	GVLI_increment = (dword)1;
@endc



/***********************************************************************
	Macros
***********************************************************************/

/* Map template object reference to real optr of dupilcated object */
@define DialogObj(obj)	ConstructOptr(OptrToHandle(g_dialog), OptrToChunk(obj) )

@define SetAttrDesc(ad,attr,value,size) ad.FEAD_attr = attr; \
	ad.FEAD_value = value; ad.FEAD_size  = size;	ad.FEAD_name  = NULL;

/***********************************************************************
	Structures
***********************************************************************/

/* Structure to simple access returned data from MSG_FM_GET_SELECTED_FILES */
typedef struct {
    FileQuickTransferHeader	header;
    FileOperationInfoEntry	entry[];
    } SelectedFilesStruct;


/* Structure to simple access List of tokens. 6 Bytes header, folowed by an GeodeToken array */
typedef struct {
    word	tokenCount;	// .. in the list
    word	firstIndex;	// .. to display in TokenList
    word	tokensToShow;	// .. in the tokenList
    GeodeToken	token[];	// array of GeodeToken structs
    				// sorted by manufacturer ID
    } TokenListStruct;


/***********************************************************************
	Constants
***********************************************************************/
#define FED_CHANGE_ICON		1	
#define FED_CHANGE_CREATROR	2

/***********************************************************************
	Headers
***********************************************************************/
// FMFetchToolsProc GetThoseTools;
word _pascal _export GetThoseTools(FMToolStruct **tablePtr);

// FMToolProc FolderEdToolStart;
void _pascal _export FolderEdToolStart(GeodeHandle filemgr, word toolNum, word entryNum);

// Handling TokenList
word FEDListTokens(void);

