/***********************************************************************
Includes
***********************************************************************/
@include <stdapp.goh>
@include <fmtool.goh>

#include <initfile.h>
#include <token.h>
#include <gstring.h>
#include <Ansi/stdio.h>
#include <Ansi/stdlib.h>
#include <Ansi/string.h>


/***********************************************************************
Macros
***********************************************************************/
@define dup(obj) ConstructOptr(OptrToHandle(oself), OptrToChunk(obj))


/***********************************************************************
Classes
***********************************************************************/

@class  OpenWithDialogClass, GenInteractionClass;
    @message (GEN_TRIGGER_ACTION) MSG_APP_TRIGGER_PRESSED;
@endc

@class  OpenWithContentClass, GenContentClass;
    @message void MSG_BUILD_TRIGGERS();
    @message void MSG_REMOVE_ALL_APP_TRIGGERS();
@endc

@class OpenWithAppLaunchTriggerClass, GenTriggerClass;
    @vardata GeodeToken ATTR_GEODE_TOKEN_TO_PASS;
    @vardata char[FILE_LONGNAME_BUFFER_SIZE + PATH_BUFFER_SIZE] ATTR_GEODE_FILE_NAME;

    @message void MSG_SET_TRIGGER_MONIKER(GeodeToken* tok, char* fname);
@endc;

@class  ConfigureDialogClass, GenInteractionClass;
    @message (GEN_FILE_SELECTOR_NOTIFICATION_MSG) MSG_FILEBROW_SELECTOR_ACTION;
    @message void MSG_CONFIRM_CONFIGURE_DIALOG();
@endc

@class  ConfigureAppListClass, GenDynamicListClass;
    @message (GEN_TRIGGER_ACTION) MSG_ADD_APP;
    @message (GEN_TRIGGER_ACTION) MSG_REMOVE_APP;
    @message void MSG_MOVE_APP(sword upOrDown);
    @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_QUERY_APP_MONIKER;
    @message (GEN_ITEM_GROUP_STATUS_MSG) MSG_APPLIST_SELECTION_CHANGED;
@endc


@classdecl OpenWithDialogClass;
@classdecl OpenWithContentClass;
@classdecl OpenWithAppLaunchTriggerClass;
@classdecl ConfigureAppListClass;
@classdecl ConfigureDialogClass;


/***********************************************************************
Headers
***********************************************************************/
word        _pascal _export GetThoseTools(FMToolStruct **tablePtr); // FMFetchToolsProc GetThoseTools
void        _pascal _export OpenWithEntryPoint(GeodeHandle filemgr, word toolNum, word entryNum); // FMToolProc OpenWithEntryPoint;

Boolean     _pascal CheckIfUnsupportedFiles();
Boolean     _pascal IsAppOnBlacklist(GeodeToken* appToken);
void        _pascal LoadFiles(GeodeToken* token, char* pathnameAndFile);
void        _pascal LaunchApp(GeodeToken *tok, DiskHandle appDisk, char *appPath, DiskHandle dataDisk, PathName *dataPath, FileLongName *dataFName);
void        _pascal ReadAppsFromIniFile();
Boolean     _pascal ReadAppsCallback(const char *stringSection, word sectionNum, void* enumData);
void        _pascal WriteAppsToIniFile();
void        _pascal _export ShowStopper();
