/***********************************************************************
Includes
***********************************************************************/
@include <stdapp.goh>
@include <fmtool.goh>

#include <initfile.h>
#include <Ansi/stdio.h>
#include <Ansi/stdlib.h>
#include <Ansi/string.h>




/***********************************************************************
Classes
***********************************************************************/
@class  OpenWithFileSelectorClass, GenFileSelectorClass;
    /* FileSelector Messages */
   @message (GEN_FILE_SELECTOR_NOTIFICATION_MSG) MSG_FILEBROW_SELECTOR_ACTION;
@endc

@class  AppDynamicListClass, GenDynamicListClass;
    @instance char selectedPathApp[PATH_BUFFER_SIZE + FILE_LONGNAME_BUFFER_SIZE] = {0};
    @instance optr appList;
    @instance char iniCat[INI_CATEGORY_BUFFER_SIZE] = {0};
    @instance char iniKey[INI_CATEGORY_BUFFER_SIZE] = {0};

    @message void MSG_LOAD_APP_LIST();
    @message void MSG_ADD_APP();
    @message (GEN_TRIGGER_ACTION) MSG_REMOVE_APP;

    @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_QUERY_APP_MONIKER;
@endc

@class  ConfigureDialogClass, GenInteractionClass;
//    @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_QUERY_APP_MONIKER; // (optr list, word	item);
@endc


@classdecl AppDynamicListClass;
@classdecl ConfigureDialogClass;
@classdecl OpenWithFileSelectorClass;


/***********************************************************************
Headers
***********************************************************************/
word _pascal _export GetThoseTools(FMToolStruct **tablePtr); // FMFetchToolsProc GetThoseTools
void _pascal _export OpenWithEntryPoint(GeodeHandle filemgr, word toolNum, word entryNum); // FMToolProc OpenWithEntryPoint;
Boolean _pascal _export CheckIfUnsupportedFiles(MemHandle selFiles);
Boolean _pascal _export IsAppOnBlacklist(GeodeToken* appToken);
void _pascal _export LoadFiles(GeodeToken* token, DiskHandle disk, char* pathnameAndFile, MemHandle selFiles);
void _pascal _export LaunchApp(GeodeToken *tok, DiskHandle appDisk, char *appPath, DiskHandle dataDisk, PathName *dataPath, FileLongName *dataFName);
